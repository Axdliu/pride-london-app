fastlane_version "2.80.0"

default_platform :ios

platform :ios do
  before_all do
    setup_circle_ci
  end

  desc "Runs all the tests"
  lane :test do
    scan(scheme: "PrideLondonApp")
  end

  desc "Signed build"
  lane :build do
    match(type: "appstore")
    # gym(export_method: "app-store", scheme: "PrideLondonApp")
    # xcodebuild(
    #   scheme: "PrideLondonApp",
    #   configuration: "Release",
    #   sdk: "iphonesimulator",
    #   xcargs: "CONFIGURATION_BUILD_DIR=" + "./build-tools/deploy/data"  
    # )
    # build_and_upload_to_appetize(
    #   xcodebuild: 
    #   scheme: "PrideLondonApp"
    # )
    tmp_path = "/tmp/fastlane_build"

    #seems not possible tu use gym here because is only made to do ipa archive
    xcodebuild_configs = {
      configuration: "Release",
      sdk: "iphonesimulator",
      derivedDataPath: tmp_path,
      xcargs: "CONFIGURATION_BUILD_DIR=" + tmp_path,
      scheme: "PrideLondonApp"
    }

    Actions::XcodebuildAction.run(xcodebuild_configs)

    app_path = Dir[File.join(tmp_path, "**", "*.app")].last

    zipped_bundle = Actions::ZipAction.run(path: app_path, output_path: File.join(tmp_path, "Result.zip"))

    Actions::AppetizeAction.run(
      path: zipped_bundle,
      platform: "ios",
      note: "#{ENV["ghprbSourceBranch"]}"
    )
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  lane :beta do
    # fetch previously generated certificates, but don't generate new ones if none already exist
    match(type: "appstore", readonly: true)
    # ensure we're on the "master" git branch
    ensure_git_branch(branch: "master")
    # set the app build number from our previously generated config
    increment_build_number(
      build_number: latest_testflight_build_number + 1,
      xcodeproj: "PrideLondonApp.xcodeproj"
    )
    # build the app for app store export
    gym(
      clean: true,
      export_method: 'app-store',
      scheme: "PrideLondonApp",
      output_directory: "./build-tools/deploy/data"
    )
    # upload to TestFlight and notify testers
    testflight(
      skip_submission: true,
      distribute_external: false,
      skip_waiting_for_build_processing: true
    )
  end
end